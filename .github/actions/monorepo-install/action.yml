# This action installs the monorepo deps with yarn. It can be reused across the different workflows.
name: "CI monorepo install (yarn)"
runs:
  using: "composite"
  steps:
    # Yarn 2+ is able to prune its cache which allows to re-use it even
    # when the yarn.lock is modified. This allows to download only changed
    # packages from the npm repo. Gives slightly faster installs but more importantly
    # in most situations the installation becomes resilient to npm downtimes.
    #
    # @see https://github.com/actions/setup-node/issues/325
    #
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"


    - name: Restore yarn cache
      uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
        restore-keys: |
          yarn-cache-folder-

    - name: Install dependencies
      shell: bash
      run: |
        yarn install --immutable --inline-builds
      env:
        PRISMA_SKIP_POSTINSTALL_GENERATE: true
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        HUSKY: 0

