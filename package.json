{
  "name": "belgattitude-perso",
  "license": "MIT",
  "private": true,
  "homepage": "https://github.com/belgattitude/perso",
  "repository": {
    "type": "git",
    "url": "https://github.com/belgattitude/perso"
  },
  "author": {
    "name": "Vanvelthem SÃ©bastien",
    "url": "https://github.com/belgattitude"
  },
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "g:clean": "yarn clean:global-cache && yarn workspaces foreach -ptv run clean",
    "g:build": "yarn workspaces foreach -p --topological-dev -v run build",
    "g:build-changed": "yarn workspaces foreach --topological-dev --no-private -v --since=origin/main run build",
    "g:test-unit": "nx run-many --target=test-unit --all",
    "g:test-e2e": "nx run-many --target=test-e2e --all",
    "g:format": "yarn workspaces foreach -ptv run format",
    "g:lint": "nx run-many --target=lint --all",
    "g:lint-styles": "nx run-many --target=lint-styles --all",
    "g:typecheck": "nx run-many --target=typecheck --all",
    "g:lint-staged-files": "lint-staged --allow-empty",
    "g:fix-all-files": "yarn workspaces foreach -ptv run fix-all-files",
    "g:changeset": "changeset",
    "g:check-dist": "yarn workspaces foreach -ptv run check-dist",
    "g:check-size": "yarn workspaces foreach -ptv run check-size",
    "g:release": "yarn g:build && changeset publish",
    "g:nx": "yarn nx",
    "g:share-static-symlink": "yarn workspaces foreach -pv --include '*-app' run share-static-symlink",
    "g:share-static-hardlink": "yarn workspaces foreach -pv --include '*-app' run share-static-hardlink",
    "clean:global-cache": "rimraf --no-glob ./.cache",
    "apps:build": "yarn workspaces foreach -ptv --include '*-app' run build",
    "apps:clean": "yarn workspaces foreach -ptv --include '*-app' run clean",
    "packages:build": "yarn workspaces foreach -ptv --include '@belgattitude/*' run build",
    "packages:test-unit": "yarn workspaces foreach -ptv --include '@belgattitude/*' run test-unit",
    "packages:lint": "yarn workspaces foreach -ptv --include '@belgattitude/*' run lint",
    "packages:typecheck": "yarn workspaces foreach -ptv --include '@belgattitude/*' run typecheck",
    "packages:check-size": "yarn workspaces foreach -ptv --include '@belgattitude/*' run check-size",
    "packages:clean": "yarn workspaces foreach -ptv --include '@belgattitude/*' run clean",
    "docker:prune-cache": "docker buildx prune",
    "docker:web-app:install": "docker buildx bake -f ./docker-compose.web-app.yml --progress=tty deps",
    "docker:web-app:develop": "cross-env DOCKER_BUILDKIT=1 docker-compose -f ./docker-compose.yml -f ./docker-compose.web-app.yml up develop main-db",
    "docker:web-app:develop:reinstall": "cross-env DOCKER_BUILDKIT=1 docker-compose -f docker-compose.web-app.yml build --progress=tty --no-cache --force-rm develop",
    "docker:web-app:build": "cross-env DOCKER_BUILDKIT=1 docker-compose -f docker-compose.web-app.yml build --progress=tty runner",
    "docker:web-app:serve": "docker-compose -f ./docker-compose.web-app.yml --env-file ./apps/web-app/.env.local up runner",
    "docker:up:main-db": "docker-compose up -d main-db",
    "docker:down": "docker-compose down",
    "docker:nuke-all": "npm-run-all --sequential --continue-on-error --print-label \"docker:nuke:*\"",
    "docker:nuke:images": "docker image rm -f $(docker image ls -q)",
    "docker:nuke:containers": "docker container rm -f $(docker container ls -qa)",
    "docker:nuke:volumes": "docker volume rm $(docker volume ls -q)",
    "docker:nuke:prune-cachemount": "docker builder prune --filter type=exec.cachemount",
    "docker:nuke:prune-buildx": "docker buildx prune",
    "nuke:node_modules": "rimraf '**/node_modules'",
    "deps:check": "yarn dlx npm-check-updates@latest --configFileName ncurc.yml --deep",
    "deps:update": "yarn dlx npm-check-updates@latest --configFileName ncurc.yml -u --deep",
    "check:install": "yarn dlx @yarnpkg/doctor@3.1 .",
    "check:renovate:config": "docker run -v renovate.json5:/usr/src/app/renovate.json5 -it renovate/renovate renovate-config-validator",
    "install:playwright": "playwright install --deps",
    "postinstall": "is-ci || yarn husky install",
    "format": "prettier --config .prettierrc.js --ignore-path .prettierignore \"./*.{js,cjs,mjs,ts,mts,md,mdx,json}\""
  },
  "dependencies": {
    "cross-env": "7.0.3"
  },
  "devDependencies": {
    "@belgattitude/eslint-config-bases": "workspace:^",
    "@changesets/changelog-github": "0.4.5",
    "@changesets/cli": "2.23.0",
    "@commitlint/cli": "17.0.3",
    "@commitlint/config-conventional": "17.0.3",
    "@nrwl/nx-cloud": "latest",
    "@nrwl/workspace": "14.3.6",
    "@playwright/test": "1.23.1",
    "@types/prettier": "2.6.3",
    "@types/shell-quote": "1.7.1",
    "eslint": "8.18.0",
    "husky": "8.0.1",
    "is-ci": "3.0.1",
    "lint-staged": "13.0.3",
    "npm-run-all": "4.1.5",
    "nx": "14.3.6",
    "prettier": "2.7.1",
    "rimraf": "3.0.2",
    "shell-quote": "1.7.3",
    "typescript": "4.7.4"
  },
  "engines": {
    "node": "16.x",
    "yarn": ">=1.22.0",
    "npm": "please-use-yarn"
  },
  "packageManager": "yarn@4.0.0-rc.10"
}
